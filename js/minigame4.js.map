{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/nav_ninja.js","webpack:///./src/scenes/smart_navigation.js","webpack:///./src/games/minigame4.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","nav_ninja_Ninja","[object Object]","scene","load","atlas","ninja_default","a","ninja_atlas","anims","directions","direction","moveName","toLowerCase","frames","generateFrameNames","prefix","start","end","zeroPad","frameRate","repeat","xPos","yPos","this","sprite","physics","add","setSize","setOffset","setCollideWorldBounds","moveTo","phaser_default","Math","Vector2","waitingForPath","path","position","clone","reverse","setMoveTo","pop","x","curX","y","curY","Equal","Fuzzy","stop","setVelocity","checkPath","angle","body","PI","play","nav_ninja","character","starmap","smart_navigation","Scene","super","image","castle_tileset_default","tilemapTiledJSON","complex_navigation_map","preload","map","make","tilemap","tileset","addTilesetImage","wallsLayer","createStaticLayer","setCollisionBetween","simpleMap","setDepth","height","width","hasTileAt","easystar_default","js","setGrid","setAcceptableTiles","createAnimations","input","on","pointer","currentTile","worldToTileXY","targetTile","findPath","setPath","tile","worldTile","tileToWorldXY","time","delta","calculate","update","load_game","zoom"],"mappings":"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","file":"js/minigame4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1093,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import Phaser from 'phaser';\n\nimport SPRITESHEET from './images/ninja.png'\nimport ATLAS from './sprites/ninja_atlas.json'\n\nclass Ninja {\n\tstatic preload(scene) {\n\t\tscene.load.atlas(Ninja.name, SPRITESHEET, ATLAS)\n\t}\n\n\tstatic createAnimations(scene) {\n\t\tconst anims = scene.anims\n\t\tconst name = Ninja.name\n\t\tconst directions = ['left', 'right', 'front', 'back']\n\n\t\tfor (let direction of directions) {\n\t\t\tconst moveName = `${name.toLowerCase()}_${direction}_walk`\n\t\t\tanims.create({\n\t\t\t\tkey: moveName,\n\t\t\t\tframes: anims.generateFrameNames(\n\t\t\t\t\tname,\n\t\t\t\t\t{ prefix: moveName + '.', start: 0, end: 3, zeroPad: 3}\n\t\t\t\t),\n\t\t\t\tframeRate: 10,\n\t\t\t\trepeat: -1,\n\t\t\t})\n\t\t}\n\t}\n\n\tconstructor(scene, xPos, yPos) {\n\t\tconst name = Ninja.name;\n\n\t\tthis.sprite = scene.physics.add\n\t\t\t.sprite(xPos, yPos, name, name.toLowerCase() + '_front')\n\t\t\t.setSize(16, 16)\n\t\t\t.setOffset(0, 15)\n\t\t\t.setCollideWorldBounds(true)\n\n\t\tthis.moveTo = new Phaser.Math.Vector2(xPos, yPos)\n\t\tthis.waitingForPath = false\n\t\tthis.path = []\n\t}\n\n\tsetMoveTo(position) {\n\t\tthis.moveTo = position.clone()\n\t\t// console.log('Moving to:')\n\t\t// console.log(this.moveTo)\n\t}\n\n\tsetPath(path) {\n\t\tthis.waitingForPath = false\n\t\tthis.path = path\n\t\tthis.path.reverse()\n\t\tthis.setMoveTo(this.path.pop())\n\t}\n\n\tcheckPath() {\n\t\tconst { x: curX, y: curY } = this.sprite\n\t\tconst Equal = Phaser.Math.Fuzzy.Equal\n\t\tif (!Equal(this.moveTo.x, curX, 1)\n\t\t\t|| !Equal(this.moveTo.y, curY, 1)) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (this.path && this.path.length > 0) {\n\t\t\tthis.setMoveTo(this.path.pop())\n\t\t\treturn false\n\t\t}\n\n\t\tthis.sprite.anims.stop()\n\t\treturn true\n\n\t}\n\n\tupdate(scene) {\n\t\tthis.sprite.setVelocity(0)\n\t\tif (this.checkPath()) {\n\t\t\treturn\n\t\t}\n\n\t\tscene.physics.moveTo(\n\t\t\tthis.sprite,\n\t\t\tthis.moveTo.x,\n\t\t\tthis.moveTo.y,\n\t\t\t100,\n\t\t)\n\n\t\tconst name = Ninja.name.toLowerCase()\n\t\tconst angle = this.sprite.body.angle * (180 / Math.PI)\n\n\t\tif (angle >= 45 && angle <= 135) {\n\t\t\tthis.sprite.anims.play(name + '_front_walk', true)\n\t\t} else if (angle <= -45 && angle >= -135) {\n\t\t\tthis.sprite.anims.play(name + '_back_walk', true)\n\t\t} else if (angle < 45 && angle > -45) {\n\t\t\tthis.sprite.anims.play(name + '_right_walk', true)\n\t\t} else {\n\t\t\tthis.sprite.anims.play(name + '_left_walk', true)\n\t\t}\n\t}\n}\n\nexport default Ninja","import Phaser from 'phaser'\nimport TILESET from '../images/castle_tileset.png'\nimport MAP from '../maps/complex_navigation_map.json'\nimport EasyStar from 'easystarjs'\n\nimport Ninja from '../nav_ninja.js'\n\nlet character\nlet starmap\n\nclass SmartNavigation extends Phaser.Scene {\n\tconstructor() {\n\t\tsuper('StupidNavigation')\n\t}\n\n\tpreload() {\n\t\tthis.load.image(\"tileset\", TILESET)\n\t\tthis.load.tilemapTiledJSON(\"map\", MAP)\n\t\tNinja.preload(this);\n\t}\n\n\tcreate() {\n\t\tconst map = this.make.tilemap({ key: \"map\" })\n\t\tconst tileset = map.addTilesetImage(\"Castle\", \"tileset\")\n\t\tconst floorLayer = map.createStaticLayer('Floor', tileset, 0, 0)\n\t\tconst wallsLayer = map.createStaticLayer('WallsWithAbove', tileset, 0, 0)\n\t\t\t.setCollisionBetween(1, 999)\n\t\tconst aboveLayer = map.createStaticLayer('Above', tileset, 0, 0)\n\t\t\t.setDepth(30)\n\n\n\t\tconst simpleMap = []\n\t\tfor (let y=0; y<map.height; y++) {\n\t\t\tsimpleMap.push([])\n\t\t\tfor (let x=0; x<map.width; x++) {\n\t\t\t\tsimpleMap[y].push(wallsLayer.hasTileAt(x, y))\n\t\t\t}\n\t\t}\n\n\t\tstarmap = new EasyStar.js()\n\t\tstarmap.setGrid(simpleMap)\n\t\tstarmap.setAcceptableTiles([false])\n\t\t// starmap.enableDiagonals()\n\n\t\tNinja.createAnimations(this)\n\n\t\tcharacter = new Ninja(this, 24, 178)\n\t\tthis.input.on('pointerdown', pointer => {\n\t\t\tconst currentTile = wallsLayer.worldToTileXY(\n\t\t\t\tcharacter.sprite.x,\n\t\t\t\tcharacter.sprite.y\n\t\t\t)\n\t\t\tconst targetTile = wallsLayer.worldToTileXY(\n\t\t\t\tpointer.position.x,\n\t\t\t\tpointer.position.y\n\t\t\t)\n\n\t\t\t// console.log(currentTile)\n\t\t\t// console.log(targetTile)\n\t\t\tstarmap.findPath(\n\t\t\t\tcurrentTile.x,\n\t\t\t\tcurrentTile.y,\n\t\t\t\ttargetTile.x,\n\t\t\t\ttargetTile.y,\n\t\t\t\tpath => {\n\t\t\t\t\tcharacter.setPath(path.map(\n\t\t\t\t\t\ttile => {\n\t\t\t\t\t\t\tconst worldTile = wallsLayer.tileToWorldXY(tile.x, tile.y)\n\t\t\t\t\t\t\tworldTile.x += 8\n\t\t\t\t\t\t\tworldTile.y += 8\n\t\t\t\t\t\t\treturn worldTile\n\t\t\t\t\t\t}\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tcharacter.waitingForPath = true\n\t\t})\n\t\t// this.physics.add.collider(wallsLayer, character.sprite)\n\t}\n\n\tupdate(time, delta) {\n\t\tif (character.waitingForPath) {\n\t\t\tstarmap.calculate()\n\t\t}\n\t\tcharacter.update(this)\n\t}\n}\n\n\nexport default SmartNavigation","import loadGame from '../load_game'\nimport map from '../maps/complex_navigation_map.json'\nimport SmartNavigation from '../scenes/smart_navigation'\n\nconst game = loadGame({\n\tscene: [SmartNavigation],\n\twidth: 240,\n\theight: 240,\n\tzoom: 2,\n})"],"sourceRoot":""}